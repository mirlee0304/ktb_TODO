TODO 앱 분석!

1. State 관리하는 이유?:  UI와 데이터의 동기화, 컴포넌트 간의 데이터 전달, 애플리케이션의 일관성 유지, 성능 최적화
2. 어떤 것을 상태관리 해야하는가?: 
-사용자 입력 데이터
-비동기 데이터: 서버에서 가져온 데이터, 예를 들어 API 호출의 결과는 상태로 관리. 데이터가 도착했을 때 UI를 업데이트할 수 있도록 함
-UI 상태
-애플리케이션 상태: 로그인 상태, 인증 토큰, 사용자 권한 등 애플리케이션 전반에 영향을 미치는 상태는 상태 관리가 필요. 애플리케이션의 전역 상태를 제어하여 일관성을 유지
-컴포넌트 간에 공유되는 데이터

3. 세션스토리지: 키, 밸류값으로 저장하고 js에서 그냥 사용 가능함. Set, get형태
4. Await. 비동기. 동시x. 기다림
5. Axios. Js 에서 http 요청을 쉽게 처리할 수 있도록 돕는 라이브러리. axios.post(url[, data[, config]]) 형태로 사용!
6. Axios에서 grant_type 중 authorization_code: 서버측에서 사용자 인증을 한 후 클라이언트가 서버로부터 인증코드를 받아 이를 이용해 액세스 토큰을 요청하는 플로우

정리1: getToken()에서 하는 일
: post 요청을 보낸다. 이 요청에서는 요청을 보낼 url, 본문, 요청설정 객체를 함께 보내는데 요청설정에서는, 어떤 인증 플로우를 사용할지, 클라이언트 아이디, 리다이렉트 uri, 사용자가 로그인을 한 후 클라이언트가 받은 인증 코드를 함께 보냄. 
: 그럼 액세스토큰을 받을 수 있음

정리2: 세션스토리지에 뭔가 저장할때는 한번에 하기! 일관성을 유지하고 토큰이 유실되는걸 방지하기 위해서!

7. useEffect 의존성 배열: useEffect(() => {~~~}, []); 여기서 맨 뒤 []는 유즈이펙트의 의존성 배열로, 이 안의 값이 변경될때마다 이 함수가 실행된다는 것임. 

8. e.preventDefault(): React 애플리케이션에서는 폼 제출 시 페이지 새로 고침을 방지하고 
    //대신 JavaScript로 필요한 처리를 하고자 할 때 e.preventDefault();를 사용합니다.




